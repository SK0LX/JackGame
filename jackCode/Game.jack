class Game {

   // 32 = space
   // 80 = p - play
   // 73 = i - info
   // 69 = e - exit
   // 96 = ` ???

   field Block block; // the square of this game
   field int countBlocks; // counts block
   field int direction; 

   /** Constructs a new Square Game. */
   constructor Game new() {
      let countBlocks = 0;
      return this;
   }

   /** Disposes this game. */
   method void dispose() {
      do block.dispose();
      do Memory.deAlloc(this);
      return;
   }

   /** Moves the square in the current direction. */
   method void moveBlock() {
      var char key;
      while (~(key = 32)){
         let key = Keyboard.keyPressed();
         if (direction = 3){
            if (block.GetX() > 0) { do block.moveLeft(); }
            else { let direction = 4; }
         }
         if (direction = 4){
            if (block.GetX() < 512) { do block.moveRight(); }
            else { let direction = 3; }
         }
      }
      do Sys.wait(5);  // delays the next movement
      return;
   }

   /** Runs the game: handles the user's inputs and moves the square accordingly */
   method void run() {
      var char key;  // the key currently pressed by the user

      do GameOver.draw();
      while (key = 0){
         let key = Keyboard.keyPressed();
         if (key = 80) { 
            do BlackMenu.earse();
            do ScoreGame.draw(); } // p play
         if (key = 73) {  } // i info
         if (key = 69) 
         { 
            do BlackMenu.earse();
            return;
         } // e exit
      }
      return;
   }

   method void Play () {
      return;
   }

   method void GetInfo () {
      return;
   }
}